@{
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}

@using TigerPadG4.ViewModel
@model UserHomepageViewModel;

<!--MAIN CONTAINER-->
<div class="user-homepage-container">
    <!--==================LEFT SIDE=======================-->
    <div class="user-left-container">
        <div class="left-profile">
            <div class="user-profile-photo">
                <img src="~/images/profile-3.jpg" />
            </div>
            <div class="user-profile-name">
                <p>@Model.UserProfile.Name</p>
                <p>&#64;@Model.UserProfile.Username</p>
            </div>
        </div>

        <div class="left-sidebar">
            <a asp-controller="User" asp-action="UserHomepage" class="sidebar-item active">
                <span><i class="uil uil-house-user"></i></span>
                <h3>Home</h3>
            </a>
            <a asp-controller="User" asp-action="UserInquiries" class="sidebar-item">
                <span><i class="uil uil-comment-question"></i></span>
                <h3>Inquiries</h3>
            </a>
        </div>
        <div class="left-button"><button id="createPostButton">CREATE POST</button></div>
    </div>

    <!--==================MIDDLE SIDE=======================-->
    <div class="user-middle-container">
        <!------------------ HOMEPAGE -------------->
        <div class="middle-homepage-text">
            <p>HOMEPAGE</p>
        </div>

        <!----------- START OF POSTS----------->
        @foreach (var post in Model.UserPosts.OrderByDescending(p => p.CreatedAt))

        if (post.IsInquiry == false)
        {
            <div class="middle-homepage-post">
                <div class="user-detail">
                    <div class="user-info">
                        <p class="name">@post.Name</p>
                        <p class="username">@post.Username</p>
                    </div>
                </div>
                <div class="user-post">
                    <p>@post.PostContent</p>
                </div>
            </div>
        }
        <!-----------------END OF POSTS---------------->
        <!-- END OF POSTS-->
        <div class="middle-end-post">
            <p>You've reached the end. Wait for new posts.</p>
        </div>
    </div>
    <!--==================RIGHT SIDE=======================-->
    <div class="inq-user-right-container">
        @if (Model.QOTD != null)
        {
            <div class="inq-quote-text"><p>Quote of the Day</p></div>
            <div class="inq-quote-content">
                <p>
                    @Model.QOTD.QuoteOftheDay
                </p>
            </div>
        }
        else
        {
            <div class="inq-quote-text"><p>No Quote of the Day available</p></div>
        }
    </div>
    <!--END OF RIGHT SIDE-->
</div>
<!-- END OF MAIN CONTAINER-->


<!-- Modal -->
<div id="createPostModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h2>Create a Post</h2>
        <textarea id="postContent" rows="4" cols="50" placeholder="Type your post here..."></textarea>
        <button onclick="submitPost()">Submit Post</button>
    </div>
</div>

<script>
    // Get the modal
    var modal = document.getElementById("createPostModal");

    // Get the button that opens the modal
    var btn = document.getElementById("createPostButton");

    // When the user clicks the button, open the modal
    btn.onclick = function () {
        modal.style.display = "block";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    // Function to close the modal
    function closeModal() {
        modal.style.display = "none";
    }

    // Function to submit the post
    function submitPost() {
        // Get the post content from the textarea
        var postContent = document.getElementById("postContent").value;

        // Close the modal
        closeModal();

        // Send the post content to the server (you'll need to implement a controller action for this)
        // For simplicity, let's assume there's a User/CreatePost action in UserController
        $.post("/User/CreatePost", { postContent: postContent })
            .done(function (data) {
                // Assuming the server responds with success
                // Reload the page or update the post list with the new post
                location.reload();
            })
            .fail(function (error) {
                // Handle the error
                console.error("Error submitting post:", error);
            })
            .always(function () {
                // Ensure the modal is closed even if there's an error
                modal.style.display = "none";
            });
    }
</script>
